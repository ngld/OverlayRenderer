template("protoc") {
    action_foreach("${target_name}_gen") {
        script = "//build/protoc_wrapper.py"
        sources = invoker.sources
        outputs = [
            "$target_gen_dir/{{source_name_part}}.pb.cc",
            "$target_gen_dir/{{source_name_part}}.pb.h",
        ]

        # Ninja sadly doesn't understand this output format (since it lists two output files).
        # depfile = "$target_gen_dir/$target_name.d"

        args = [
            "--cpp_out", rebase_path(target_gen_dir, root_build_dir),
            # "--dependency_out", rebase_path("$target_gen_dir/$target_name.d", root_build_dir),
            "{{source}}"
        ]

        foreach(item, invoker.include_dirs) {
            args += [ "-I" + rebase_path(item, root_build_dir) ]
        }

        deps = [ "//third_party:protoc" ]
    }

    config("${target_name}_public") {
        include_dirs = [ "$target_gen_dir" ]
    }

    source_set(target_name) {
        sources = get_target_outputs(":${target_name}_gen")

        deps = [ ":${target_name}_gen" ]
        public_deps = [ "//third_party:libprotobuf" ]
        public_configs = [ ":${target_name}_public" ]
    }
}
